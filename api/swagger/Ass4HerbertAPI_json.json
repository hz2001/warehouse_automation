{
  "openapi": "3.0.0",
  "info": {
    "title": "Ass4HerbertAPI Swagger API",
    "description": "This is the swagger page for Herbert's api for DS519 assignment 4",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://ds519ass4functions.azurewebsites.net/api"
    }
  ],
  "tags": [
    {
      "name": "shippingItemGet",
      "description": "Everything about ShippingItemsGet"
    },
    {
      "name": "shippingItemPost",
      "description": "Everything about shippingItemPost"
    }
  ],
  "paths": {
    "/shippingItemGet": {
      "get": {
        "tags": [
          "shippingItemGet"
        ],
        "summary": "Finds shippingItems by ShipperID",
        "description": "Returns all shipped item from the given ShipperID",
        "operationId": "findShippingItemsByShipperID",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "authentication key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShipperID",
            "in": "query",
            "description": "ShipperID that the shipped items was at",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Zhang"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              }
            }
          },
          "404": {
            "description": "no items found"
          }
        }
      }
    },
    "/shippingItemPost": {
      "post": {
        "tags": [
          "shippingItemPost"
        ],
        "summary": "Updates shippingItems by ShipperID",
        "description": "Returns all shipped item from the given ShipperID",
        "operationId": "postShippingItem",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "authentication key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShipperID",
            "in": "query",
            "description": "ShipperID that the shipped items was at",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Zhang"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/shippingItem": {
      "post": {
        "tags": [
          "shippingItemPost"
        ],
        "summary": "Updates shippingItems by ShipperID",
        "description": "Returns all shipped item from the given ShipperID",
        "operationId": "ShippingItemPost",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "authentication key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShipperID",
            "in": "query",
            "description": "ShipperID that the shipped items was at",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Zhang"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "shippingItemGet"
        ],
        "summary": "Finds shippingItems by ShipperID",
        "description": "Returns all shipped item from the given ShipperID",
        "operationId": "ShippingItemGet",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "authentication key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShipperID",
            "in": "query",
            "description": "ShipperID that the shipped items was at",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Zhang"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingItems"
                  }
                }
              }
            }
          },
          "404": {
            "description": "no items found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ShippingItems": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": 10
          },
          "Date": {
            "type": "string",
            "format": "month date, year",
            "example": "Mar 9, 2022"
          },
          "WarehouseID": {
            "type": "string",
            "example": "a908cef7-4c67-40f3-88f7-08a03ba4104a"
          },
          "ShippingPO": {
            "type": "string",
            "example": "81d06bd2-39e3-427c-9fb3-4e217b9a4d60"
          },
          "ShipmentID": {
            "type": "string",
            "example": 5
          },
          "ShipperID": {
            "type": "string",
            "example": "Duan"
          },
          "BoxesRcvd": {
            "type": "string",
            "example": 12
          },
          "_rid": {
            "type": "string",
            "example": "ldVkAP0fhCQGAAAAAAAAAA=="
          },
          "_self": {
            "type": "string",
            "example": "dbs/ldVkAA==/colls/ldVkAP0fhCQ=/docs/ldVkAP0fhCQGAAAAAAAAAA==/"
          },
          "_etag": {
            "type": "string",
            "example": "\\\\\"7e007215-0000-0100-0000-640e84690000\\\\\""
          },
          "_attachments": {
            "type": "string",
            "example": "attachments/"
          },
          "_ts": {
            "type": "integer",
            "format": "int64",
            "example": 1678673001
          }
        }
      }
    },
    "securitySchemes": {
      "code": {
        "type": "apiKey",
        "name": "AzureFunctionKey",
        "in": "query"
      }
    }
  }
}